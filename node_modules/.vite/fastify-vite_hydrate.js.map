{
  "version": 3,
  "sources": ["../fastify-vite/hydrate.js", "dep:fastify-vite_hydrate"],
  "sourcesContent": ["const { useSSRContext } = require('vue')\n\nfunction hydrate (app, dataKey = '$data', globalDataKey = '$global') {\n  const dataSymbol = Symbol.for(dataKey)\n  app.config.globalProperties.$dataPath = () => `/-/data${document.location.pathname}`\n  app.config.globalProperties[dataKey] = window[dataSymbol]\n  delete window[dataSymbol]\n\n  const globalDataSymbol = Symbol.for(globalDataKey)\n  app.config.globalProperties[globalDataKey] = window[globalDataSymbol]\n  delete window[globalDataSymbol]\n\n  const apiSymbol = Symbol.for('fastify-vite-api')\n  app.config.globalProperties.$api = window[apiSymbol]\n  delete window[apiSymbol]\n\n  setupServerAPI(app.config.globalProperties)\n}\n\nmodule.exports = { hydrate }\n\nfunction setupServerAPI (globalProperties) {\n  const { $api } = globalProperties\n  globalProperties.$api = import.meta.env.SSR\n    ? useSSRContext().req.api.client\n    : new Proxy($api, { get: getFetchWrapper })\n}\n\nfunction getFetchWrapper (methods, method) {\n  if (method in methods) {\n    if (Array.isArray(!methods[method]) && typeof methods[method] === 'object') {\n      return new Proxy(methods[method], { get: getFetchWrapper })\n    }\n    const hasParams = methods[method][1].match(/\\/:(\\w+)/)\n    if (hasParams) {\n      return async (params, options = {}) => {\n        options.method = methods[method][0]\n        // eslint-disable-next-line no-undef\n        const response = await fetch(applyParams(methods[method][1], params), options)\n        const body = await response.text()\n        return {\n          body,\n          json: tryJSONParse(body),\n          status: response.status,\n          headers: response.headers\n        }\n      }\n    } else {\n      return async (options = {}) => {\n        options.method = methods[method][0]\n        // eslint-disable-next-line no-undef\n        const response = await fetch(methods[method][1], options)\n        const body = await response.text()\n        return {\n          body,\n          json: tryJSONParse(body),\n          status: response.status,\n          headers: response.headers\n        }\n      }\n    }\n  }\n}\n\nfunction applyParams (template, params) {\n  try {\n    return template.replace(/:(\\w+)/g, (_, m) => {\n      if (params[m]) {\n        return params[m]\n      } else {\n        // eslint-disable-next-line no-throw-literal\n        throw null\n      }\n    })\n  } catch (err) {\n    return null\n  }\n}\n\nfunction tryJSONParse (str) {\n  try {\n    return JSON.parse(str)\n  } catch (_) {\n    return undefined\n  }\n}\n", "\nexport * from \"./node_modules/fastify-vite/hydrate.js\""],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA,MAAM,CAAE,iBAAkB;AAE1B,mBAAkB,KAAK,UAAU,SAAS,gBAAgB,WAAW;AACnE,UAAM,aAAa,OAAO,IAAI;AAC9B,QAAI,OAAO,iBAAiB,YAAY,MAAM,UAAU,SAAS,SAAS;AAC1E,QAAI,OAAO,iBAAiB,WAAW,OAAO;AAC9C,WAAO,OAAO;AAEd,UAAM,mBAAmB,OAAO,IAAI;AACpC,QAAI,OAAO,iBAAiB,iBAAiB,OAAO;AACpD,WAAO,OAAO;AAEd,UAAM,YAAY,OAAO,IAAI;AAC7B,QAAI,OAAO,iBAAiB,OAAO,OAAO;AAC1C,WAAO,OAAO;AAEd,mBAAe,IAAI,OAAO;AAAA;AAdnB;AAiBT,SAAO,UAAU,CAAE;AAEnB,0BAAyB,kBAAkB;AACzC,UAAM,CAAE,QAAS;AACjB,qBAAiB,OAAO,YAAY,IAAI,MACpC,gBAAgB,IAAI,IAAI,SACxB,IAAI,MAAM,MAAM,CAAE,KAAK;AAAA;AAJpB;AAOT,2BAA0B,SAAS,QAAQ;AACzC,QAAI,UAAU,SAAS;AACrB,UAAI,MAAM,QAAQ,CAAC,QAAQ,YAAY,OAAO,QAAQ,YAAY,UAAU;AAC1E,eAAO,IAAI,MAAM,QAAQ,SAAS,CAAE,KAAK;AAAA;AAE3C,YAAM,YAAY,QAAQ,QAAQ,GAAG,MAAM;AAC3C,UAAI,WAAW;AACb,eAAO,OAAO,QAAQ,UAAU,OAAO;AACrC,kBAAQ,SAAS,QAAQ,QAAQ;AAEjC,gBAAM,WAAW,MAAM,MAAM,YAAY,QAAQ,QAAQ,IAAI,SAAS;AACtE,gBAAM,OAAO,MAAM,SAAS;AAC5B,iBAAO;AAAA,YACL;AAAA,YACA,MAAM,aAAa;AAAA,YACnB,QAAQ,SAAS;AAAA,YACjB,SAAS,SAAS;AAAA;AAAA;AAAA,aAGjB;AACL,eAAO,OAAO,UAAU,OAAO;AAC7B,kBAAQ,SAAS,QAAQ,QAAQ;AAEjC,gBAAM,WAAW,MAAM,MAAM,QAAQ,QAAQ,IAAI;AACjD,gBAAM,OAAO,MAAM,SAAS;AAC5B,iBAAO;AAAA,YACL;AAAA,YACA,MAAM,aAAa;AAAA,YACnB,QAAQ,SAAS;AAAA,YACjB,SAAS,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AA7BnB;AAoCT,uBAAsB,UAAU,QAAQ;AACtC,QAAI;AACF,aAAO,SAAS,QAAQ,WAAW,CAAC,GAAG,MAAM;AAC3C,YAAI,OAAO,IAAI;AACb,iBAAO,OAAO;AAAA,eACT;AAEL,gBAAM;AAAA;AAAA;AAAA,aAGH,KAAP;AACA,aAAO;AAAA;AAAA;AAXF;AAeT,wBAAuB,KAAK;AAC1B,QAAI;AACF,aAAO,KAAK,MAAM;AAAA,aACX,GAAP;AACA,aAAO;AAAA;AAAA;AAJF;AAAA;;;AC/ET;AAAA;AACA,wBAAc;AAAA;",
  "names": []
}
